# ============================================================================
# SECURITY WARNING: CHANGE ALL DEFAULT VALUES BEFORE PRODUCTION DEPLOYMENT!
# ============================================================================

# Database Configuration
# SECURITY: Use strong, unique passwords in production
# DB_HOST:
#   - When running the full Docker Compose stack: set DB_HOST=db (the service name)
#   - When running backend locally (outside docker) against dockerized MySQL: use 127.0.0.1 (NOT 'localhost' on some systems) and ensure port is published
#   - When using a managed/external MySQL: set the external host/IP
DB_HOST=db
DB_PORT=3306
DB_USER=ngx_user
# Root password only needed if you want the app / db-init job to create user & database
DB_ROOT_PASSWORD=CHANGE_ME_ROOT_PASSWORD_IF_USED
# CHANGE THIS: Use a strong, randomly generated password for the application user
DB_PASSWORD=CHANGE_ME_STRONG_PASSWORD_HERE
DB_NAME=nginx_proxy_manager

# Optional default admin seeding (created if not present)
DEFAULT_USER_EMAIL=admin@example.com
DEFAULT_USER_PASSWORD=admin123
DEFAULT_USER_NAME=Administrator

# JWT Configuration
# CRITICAL: Generate a strong, random JWT secret (minimum 64 characters)
# Use: openssl rand -base64 64
JWT_SECRET=CHANGE_ME_GENERATE_STRONG_JWT_SECRET_MINIMUM_64_CHARS
JWT_EXPIRES_IN=24h
JWT_ISSUER=ngx-manager
JWT_AUDIENCE=ngx-manager-users

# Server Configuration
SERVER_PORT=5000
NODE_ENV=production

# Security Configuration
# Logging level: error, warn, info, debug
LOG_LEVEL=info
# Frontend URL for CORS (production URL)
FRONTEND_URL=https://yourdomain.com
# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
AUTH_RATE_LIMIT_MAX_REQUESTS=5

# Password Security
# Minimum password length
MIN_PASSWORD_LENGTH=12
# Account lockout after failed attempts
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_TIME_MS=900000
# Password history to prevent reuse (number of previous passwords to remember)
PASSWORD_HISTORY_LIMIT=5

# Nginx Configuration
NGINX_CONFIG_PATH=/etc/nginx/conf.d
# Prefer NGINX_CONFIG_DIR (backward compatible with NGINX_CONFIG_PATH)
NGINX_CONFIG_DIR=/etc/nginx

# Certbot Configuration
# Certbot (new variable names preferred; older CERTBOT_CERTS_PATH & CERTBOT_WWW_PATH still accepted)
CERTBOT_PATH=certbot
CERTBOT_CONFIG_DIR=/etc/letsencrypt
CERTBOT_WORK_DIR=/var/lib/letsencrypt
CERTBOT_LOGS_DIR=/var/log/letsencrypt
CERTBOT_WEBROOT=/var/www/certbot

# Frontend Configuration
# CHANGE THIS: Use your production domain
VITE_API_URL=https://api.yourdomain.com